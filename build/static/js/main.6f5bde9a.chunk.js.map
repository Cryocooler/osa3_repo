{"version":3,"sources":["services/persons.js","components/Filter.js","components/Persons.js","components/PersonForm.js","components/Notif.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","input","handleChange","value","onChange","Persons","persons","appliedFilter","removePerson","filter","person","name","toLowerCase","includes","map","number","onClick","PersonForm","formTrigger","inputName","inputNumber","personChange","numberChange","handleExisting","onSubmit","type","Notif","message","className","Error","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","success","setSuccessMessage","errorMessage","setErrorMessage","console","log","useEffect","personService","initialPersons","length","event","target","slice","preventDefault","nameObject","window","confirm","updatedPerson","find","p","changedNumber","setTimeout","catch","error","updatedPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f5bde9a.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'api/persons'\n\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\nconst remove = (id) => {\n    return  axios.delete(`${baseUrl}/${id}`)\n    \n}\n\n\n\nexport default {getAll, create, update, remove}","import React from 'react'\n\nconst Filter = ({input, handleChange}) =>\n{\n  return(\n    <div>\n      filter shown with \n      <input value = {input} onChange = {handleChange} />\n\n    </div>\n\n  )\n}\n\n\nexport default Filter","import React from 'react'\n\n\nconst Persons = ({ persons, appliedFilter, removePerson }) => {\n    \n    return(\n       <div>\n         {persons.filter(person => person.name.toLowerCase().includes(appliedFilter.toLowerCase())).map(person =>\n            <div key = {person.name}> \n            {person.name} {person.number}\n            <button onClick = {()=> removePerson(person.id)}> delete</button> </div> )}\n       </div>\n  \n    )\n  }\n\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = ({ formTrigger, inputName, inputNumber, personChange, numberChange, handleExisting}) => {\n\n    return(\n      <div>\n        <form onSubmit = {formTrigger} >\n          <div>\n            name: <input value = {inputName} onChange = {personChange}/>\n          </div>\n          <div>\n            number: <input value = {inputNumber} onChange = {numberChange}/>\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n      </div>\n  \n    )\n  }\n\n\n\nexport default PersonForm","import React from 'react'\n\n\nconst Notif = ({ message }) => {\n    if (message === null ) {\n      return null\n    }\n  \n    return (\n      <div className = \"success\">\n        {message}\n      </div>\n    )\n  }\n\n\n\nexport default Notif","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notif from './components/Notif'\n\nconst Error = ( {message} ) => {\n  if (message === null) {\n    return null\n  }\n  return(\n    <div className =\"error\">\n    {message}\n    </div>\n  )\n}\n\n\nconst App = () => {\n  //initial state, phonebook with one entry\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ success, setSuccessMessage ] = useState(null)\n  const [errorMessage, setErrorMessage ] = useState(null)\n  console.log('persons', persons)\n  \n\n\n  useEffect(() => {\n      personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n        })\n      }, [])\n    console.log('render', persons.length, 'persons')\n\n\n  const handleNameChange = (event) => {\n    console.log('target', event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    setNewName(event.target.value)\n    const nameObject = {\n      name : newName,\n      number : newNumber\n    }\n    if (persons.map(person => person.name).includes(newName)) {\n  \n      console.log('IF STATEMENT OF EXISTING TRIGGERED')\n     if (window.confirm(`${newName} is already added to phonebook, do you want to relace the old number with a new one?`)) {\n      const updatedPerson = persons.find(p => p.name === newName)\n      console.log('Person to be updated', newName)\n      console.log('COmparison', updatedPerson)\n      console.log('ID of updatee', updatedPerson.id)\n      const changedNumber = {...updatedPerson, number: newNumber}\n      \n      personService\n      .update(updatedPerson.id, changedNumber)\n      .then(response => {\n        console.log('RESPONSE',response)\n        setPersons(persons.map(name => name.id !== updatedPerson.id ? name: response))\n        setSuccessMessage(`Changed number for ${newName}`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 2000)\n        setNewName('')\n        setNewNumber('')\n       })\n        .catch(error => {\n        setErrorMessage(\n          `Information of ${updatedPerson.name} was already removed from server `\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n        setNewName('')\n        setNewNumber('')\n      })\n    } else {\n      setNewName('')\n      setNewNumber('')\n\n    }\n    } else {  \n      console.log('PERSON DOES NOT EXIST, ADD')\n        personService\n        .create(nameObject)\n        .then(response => {\n          console.log(response)\n          setNewName('')\n          setNewNumber('')\n          personService\n          .getAll()\n          .then(updatedPersons => {\n            setPersons(updatedPersons)\n            setSuccessMessage(`Added ${newName}`)\n            setTimeout(() => {\n              setSuccessMessage(null)\n            }, 2000)\n            \n\n        }) \n\n        \n      })\n      .catch(error => {\n        setErrorMessage(`${newName} was already removed from server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 2000)\n        setNewName('')\n        setNewNumber('')\n      })\n   \n      \n     \n\n      \n    } \n  }\n  \n  const deleteName = (id) => {\n    console.log('person id', persons.filter(person => person.id === id)[0].name)\n    if (window.confirm(`Delete  ${persons.filter(person => person.id === id)[0].name} ?`) )\n    \n    personService\n    .remove(id)\n    .then(response => {\n      console.log(response)\n      setPersons(persons.filter(person => person.id !== id))\n      \n    })\n  }\n\n  //console.log('mapped id', persons.map(person => person.id))\n\n\n \n  const handleFilter = (event) => {\n    console.log('filteri', event.target.value)\n    setNewFilter(event.target.value)\n    const slice = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n    console.log('slice', slice)\n\n  }\n\n  const handleNumberChange = (event) => {\n    console.log('')\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notif message = {success} />\n      <Error message = {errorMessage} />\n      <Filter input = {newFilter} handleChange = {handleFilter} />\n      <h2>Add a new </h2>\n      <PersonForm formTrigger = {addName}\n                  inputName = {newName}\n                  inputNumber = {newNumber}\n                  personChange = {handleNameChange}\n                  numberChange = {handleNumberChange}\n                  \n                  \n        />\n    \n      <h2>Numbers</h2>\n  \n       \n      <Persons persons = {persons} \n      appliedFilter = {newFilter}\n      removePerson = {deleteName} />\n      \n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}